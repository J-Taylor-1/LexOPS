% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control_for_map.R
\name{control_for_map}
\alias{control_for_map}
\title{Control for confounding variables via a function.}
\usage{
control_for_map(
  df,
  fun,
  var,
  tol = NA,
  name = NA,
  string_col = "string",
  cond_col = NA,
  standard_eval = FALSE
)
}
\arguments{
\item{df}{A data frame that is the result from \code{split_by()}.}

\item{fun}{The function to use to calculate the control varibale. Should be an object of class "function".}

\item{var}{The column to provide the value which will be the first argument of the function.}

\item{tol}{The tolerance of the control. For numeric variables, this should be in the form lower:upper (e.g. \code{-0.1:0.1} will control within +/- 0.1). For categorical variables, this can be kept as \code{NA}.}

\item{name}{What the output column should be named. If \code{NA} (default), will automatically assign as \code{sprintf("control_fun_\%i", nr)}, where \code{nr} is the number of the control function.}

\item{string_col}{The column containing the strings (default = "string").}

\item{cond_col}{Prefix with which the columns detailing the splits were labelled by \code{split_by()}. This is rarely needed (default = NA), as by default the function gets this information from \code{df}'s attributes.}

\item{standard_eval}{Logical; bypasses non-standard evaluation, and allows more standard R objects in \code{var} and \code{tol}. If \code{TRUE}, \code{var} should be a character vector referring to a column in \code{df} (e.g. \code{"Zipf.SUBTLEX_UK"}), and \code{tol} should be a vector of length 2, specifying the tolerance (e.g. \code{c(-0.1, 0.5)}). Default = \code{FALSE}.}
}
\value{
Returns \code{df}, with details on the variables to be controlled for added to the attributes. Run the \code{generate()} function to then generate the actual stimuli.
}
\description{
Some variables (e.g. similarity measures) are hard to control for with \code{LexOPS::control_for()}. The \code{control_for_fun()} function declares a function that the \code{generate()} function should apply to each match_null. The function given as \code{fun} should be able to take the data in the column given in \code{var} as the first argument, and should be able to take the match_null's value in that column as the second argument.
}
\examples{

# Create two levels of arousal, controlling for orthographic similarity
library(vwr)
lexops \%>\%
 split_by(AROU.Warriner, 1:3 ~ 7:9) \%>\%
 control_for_map(levenshtein.distance, string, 0:4)

# Create two levels of arousal, controlling for phonological similarity
library(vwr)
lexops \%>\%
 split_by(AROU.Warriner, 1:3 ~ 7:9) \%>\%
 control_for_map(levenshtein.distance, eSpeak.br_1letter, 0:2)

# Bypass non-standard evaluation
library(vwr)
lexops \%>\%
 split_by(AROU.Warriner, 1:3 ~ 7:9) \%>\%
 control_for_map(levenshtein.distance, "eSpeak.br_1letter", c(0, 2), standard_eval=TRUE)

}
