% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/euc_dists.R
\name{euc_dists}
\alias{euc_dists}
\title{Calculate a word's Euclidean distance from other words}
\usage{
euc_dists(df = LexOPS::lexops, target, vars = "all", string_col = "string")
}
\arguments{
\item{df}{A data frame.}

\item{target}{The target string (word) that euclidean distances are required for.}

\item{vars}{The variables to be used as dimensions which Euclidean distance should be calculated over. Can be a vector of strings giving the variable names (e.g. \code{c("Zipf.SUBTLEX_UK", "Length")}, or, \code{"all"}, to use all numeric variables in the data frame). The default is \code{"all"}.}

\item{string_col}{The column containing the strings (default = \code{"string"}).}
}
\value{
Returns a vector of Euclidean distances, in the order of rows in \code{df}.
}
\description{
Caclulates the Euclidean distance of a word from all other words in a df, on selected variables.
}
\examples{

# Get the distance of every entry in the `lexops` dataset from the word "thicket".
# (Note: This will be calculated using the dimensions of frequency, arousal, and size)
lexops \%>\%
  euc_dists("thicket", c("Zipf.SUBTLEX_UK", "AROU.Warriner", "SIZE.Glasgow_Norms"))

# Add Euclidean distance as new column
# (Also sort ascendingly by distance; barbara will have a distance of 0 so will be first)
lexops \%>\%
  dplyr::mutate(ed = euc_dists(., "barbara", c("Length", "Zipf.SUBTLEX_UK", "BG.SUBTLEX_UK"))) \%>\%
  dplyr::arrange(ed)

}
