% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_by.R
\name{split_by}
\alias{split_by}
\title{split_by}
\usage{
split_by(df = LexOPS::lexops, split, filter = TRUE,
  stringCol = "string", condCol = "splitCond")
}
\arguments{
\item{df}{A data frame to reorder, containing the target string (default = LexOPS::lexops).}

\item{split}{A list object specifying the splits in the form, \code{list("IV_column", c(1, 3), c(4, 6), ...)}, where the first item is the column that specified the IV. Subsequent arguments specify all levels of the split. Splits must be non-overlapping.}

\item{filter}{Logical. If TRUE, words which fit no conditions are removed.}

\item{stringCol}{The column containing the strings (default = "string").}

\item{condCol}{Prefix with which to name the column where the condition will be stored (default = "splitCond"). Each time split_by() is run on a dataframe, a new condCol is added to the data frame, e.g., the first time will add splitCond_A, the second time will ad split_cond_B, etc. If multiple split_by() functions are used on a data frame (e.g. with pipes), the value of condCol must be the same each time the function is called. The default is usually sufficient.}
}
\value{
Returns \code{df}, with a new (or edited) column which is a character vector of form c("A1", "A3", "B1", "B1"...), identifying which condition each string belongs to. The data frame will also be grouped by this variable (see \link[dplyr]{group_by}).
}
\description{
Specifies splits for one IV for a factorial design. NOT YET FUNCTIONAL
}
\examples{

# Create 3 levels of syllables, for 1-3, 4-6, and 7-20 syllables
LexOPS::lexops \%>\% split_by(list("Syllables.CMU", c(1, 3), c(4, 6), c(7, 20)))

# Create two levels of position of speech, noun and verb
LexOPS::lexops \%>\% split_by(list("PoS.SUBTLEX_UK", "noun", "verb"))

}
\seealso{
\code{\link{lexops}} for the default data frame and associated variables.
}
