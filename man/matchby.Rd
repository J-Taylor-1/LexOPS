% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchby.R
\name{matchby}
\alias{matchby}
\title{matchby}
\usage{
matchby(target, vars, df = LexOPS::lexops, stringCol = "string",
  filter = TRUE)
}
\arguments{
\item{target}{The target string}

\item{vars}{Can be a list of vars from df to match by, in the form list("numericVariable1Name", c("numericVariable2Name", -1.5, 3), "characterVariableName"). Numeric variables can include tolerances (as elements 2:3 of a vector). Numeric variables with no tolerances will be matched exactly.}

\item{df}{A data frame to reorder, containing the target string (default = LexOPS::lexops).}

\item{stringCol}{The column containing the strings (default = "string")}

\item{filter}{Logical. If TRUE, matches outside the tolerances specified in vars are removed. If FALSE, a new column, matchFilter is calculated indicating whether or not the string is within all variables' tolerances. (Default = TRUE.)}
}
\value{
Returns data frame based on \code{df}. If \code{filter} == TRUE, will only contain matches. If \code{filter} == FALSE, will be the original \code{df} object, with a new column, "matchFilter".
}
\description{
Suggests strings that are suitable matches for a target string, based on
selected variables of a data frame.
}
\examples{

# Match by number of syllables exactly
matchby("thicket", "Syllables.CMU")

# Match by number of syllables exactly, but keep the original dataframe
matchby("thicket", "Syllables.CMU", filter = FALSE)

# Match by number of syllables exactly, and rhyme
matchby("thicket", list("Syllables.CMU", "Rhyme.CMU"))

# Match by length exactly, and closely by frequency (within 0.2 Zipf either way)
matchby("thicket", list("Length", c("Zipf.SUBTLEX_UK", -0.2, 0.2)))

}
\seealso{
\code{\link{lexops}} for the default data frame and associated variables.
}
