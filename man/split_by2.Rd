% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_by2.R
\name{split_by2}
\alias{split_by2}
\title{Add a split to the data.}
\usage{
split_by2(df, split, condCol = "LexOPS_splitCond", filter = TRUE)
}
\arguments{
\item{df}{A data frame containing the IV and strings.}

\item{split}{A list object specifying the levels of the split in the form, \code{list("IV_column", c(1, 3), c(4, 6), ...)} for
integer columns; the form \code{list("IV_column", c(1, 4, 7))} for continuous columns; the form \code{list("IV_column", c("noun", "verb"))}
for factor columns. Splits must be non-overlapping.}

\item{condCol}{Prefix with which to name the column where the condition will be stored (default = "LexOPS_splitCond"). Each time
split_by2() is run on a dataframe, a new condCol is added to the data frame, e.g., the first time will add splitCond_A, the second
time will ad split_cond_B, etc. If multiple split_by2() functions are used on a data frame (e.g. with pipes), the value of condCol
must be the same each time the function is called. The default is usually sufficient.}

\item{filter}{Logical. If TRUE, words which fit no conditions are removed.}
}
\value{
Returns \code{df}, with a new column (name defined by \code{condCol} argument) identifying which level of the IV each string belongs to.
}
\description{
Specifies splits for one IV for a factorial design. Can be called multiple times for multiple splits.
}
\examples{

# Create 3 levels of syllables, for 1-3, 4-6, and 7-20 syllables
lexops \%>\%
  split_by2(list("Syllables.CMU", c(1, 3), c(4, 6), c(7, 20)))

# Create 2 levels of position of speech, noun and verb
lexops \%>\%
  split_by2(list("PoS.SUBTLEX_UK", "noun", "verb"))

# Perform two splits
lexops \%>\%
  split_by2(list("Syllables.CMU", c(1, 3), c(4, 6), c(7, 20))) \%>\%
  split_by2(list("PoS.SUBTLEX_UK", "noun", "verb"))

}
\seealso{
\code{\link{lexops}} for the default data frame and associated variables.
}
